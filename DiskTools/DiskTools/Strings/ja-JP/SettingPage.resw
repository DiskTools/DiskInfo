<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ThemeSettings.Header" xml:space="preserve">
    <value>テーマを適用</value>
  </data>
  <data name="ThemesSettingsHeader.Header" xml:space="preserve">
    <value>テーマ</value>
  </data>
  <data name="UpdateSettingsHeader.Header" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="UpToDate" xml:space="preserve">
    <value>最新</value>
  </data>
  <data name="WindowsColorButton.Content" xml:space="preserve">
    <value>Windows の色設定</value>
  </data>
  <data name="RadioThemeDark.Content" xml:space="preserve">
    <value>ダーク</value>
  </data>
  <data name="RadioThemeDefault.Content" xml:space="preserve">
    <value>Windows のデフォルト</value>
  </data>
  <data name="RadioThemeLight.Content" xml:space="preserve">
    <value>ライト</value>
  </data>
  <data name="BackdropSettings.Description" xml:space="preserve">
    <value>Windows 11 の背景色の種類を選択してください</value>
  </data>
  <data name="BackdropSettings.Header" xml:space="preserve">
    <value>背景色</value>
  </data>
  <data name="ConfigsSettingsHeader.Header" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="ReleaseNotes.Content" xml:space="preserve">
    <value>リリースノート</value>
  </data>
  <data name="ResetSettings.Description" xml:space="preserve">
    <value>このアプリケーションの設定をリセットします。 </value>
  </data>
  <data name="ResetSettings.Header" xml:space="preserve">
    <value>アプリをリセット</value>
  </data>
  <data name="ResetSettingsButton.Content" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="ResetSettingsConfirm.Content" xml:space="preserve">
    <value>は</value>
  </data>
  <data name="ResetSettingsTitle.Text" xml:space="preserve">
    <value>本当にアプリをリセットしますか? </value>
  </data>
  <data name="FeedbackLink.Content" xml:space="preserve">
    <value>フィードバック</value>
  </data>
  <data name="FindUpdate" xml:space="preserve">
    <value>新しい更新が見つかりました</value>
  </data>
  <data name="FrameworkSettings.Description" xml:space="preserve">
    <value>このアプリケーション フレームに関する情報。 </value>
  </data>
  <data name="FrameworkSettings.Header" xml:space="preserve">
    <value>フレーム情報</value>
  </data>
  <data name="FrameworkTextBlock.Text" xml:space="preserve">
    <value>フレーム</value>
  </data>
  <data name="GoToTestPage.Description" xml:space="preserve">
    <value>テスト用のページに移動します。 </value>
  </data>
  <data name="GoToTestPage.Header" xml:space="preserve">
    <value>テスト ページに移動</value>
  </data>
  <data name="GoToUpdate.Content" xml:space="preserve">
    <value>更新に移動</value>
  </data>
  <data name="OSArchitectureTextBlock.Text" xml:space="preserve">
    <value>OS アーキテクチャ</value>
  </data>
  <data name="OSPlatformTextBlock.Text" xml:space="preserve">
    <value>OS プラットフォーム</value>
  </data>
  <data name="AboutSettingsHeader.Header" xml:space="preserve">
    <value>について</value>
  </data>
  <data name="LastChecked.Text" xml:space="preserve">
    <value>最終チェック時刻: </value>
  </data>
  <data name="LogFolderLink.Content" xml:space="preserve">
    <value>ログ</value>
  </data>
  <data name="CheckFailed" xml:space="preserve">
    <value>チェックに失敗しました</value>
  </data>
  <data name="CheckingUpdates.Text" xml:space="preserve">
    <value>更新を確認しています...</value>
  </data>
  <data name="CheckUpdates.Content" xml:space="preserve">
    <value>アップデートをチェック</value>
  </data>
</root>